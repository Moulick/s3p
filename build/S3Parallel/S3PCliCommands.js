"use strict"
let Caf = require('caffeine-script-runtime');
Caf.defMod(module, () => {return Caf.importInvoke(["merge", "console", "formatDate", "pad", "humanByteSize"], [global, require('./StandardImport'), require('./Lib')], (merge, console, formatDate, pad, humanByteSize) => {let quietDefaultIfApi; quietDefaultIfApi = function(f) {return (options) => {let temp; return f(merge(options, {quiet: ((temp = options.quiet) != null ? temp : options.fromCli ? false : true)}));};}; return {version: function() {return require('../../package').version;}, ls: function(options) {let items, onItem, output, fromCli, verbose; items = []; onItem = options.onItem; output = options.output; fromCli = options.fromCli; verbose = options.verbose; output != null ? output : output = (v) => console.log(v); onItem != null ? onItem : onItem = fromCli ? ({LastModified, Size, Key}) => output(options.long ? `${Caf.toString(formatDate(LastModified, "yyyy-mm-dd HH:MM:ss"))} ${Caf.toString(pad(humanByteSize(Size), 10, " ", true))} ${Caf.toString(Key)}` : Key) : (item) => items.push(item); return require('./S3Comprehensions').each(merge({quiet: true}, options, {mapList: (l) => {let from, into, to, i; from = l; into = from; if (from != null) {to = from.length; i = 0; while (i < to) {let item; item = from[i]; onItem(item); i++;};}; into; return null;}})).then((info) => fromCli ? verbose ? info : null : verbose ? merge(info, {items}) : items);}, listBuckets: quietDefaultIfApi(require('./Lib/S3').listBuckets), summarize: quietDefaultIfApi(require('./S3P').summarize), compare: quietDefaultIfApi(require('./S3P').compare), cp: quietDefaultIfApi(require('./S3P').copy), sync: quietDefaultIfApi(require('./S3P').sync), each: quietDefaultIfApi(require('./S3Comprehensions').each), map: quietDefaultIfApi(require('./S3Comprehensions').map)};});});
//# sourceMappingURL=S3PCliCommands.js.map
