import &StandardImport

commands = {copy, summarize, sync, compare, list} = &S3P
commands.cp = commands.copy
commands.ls = commands.list

class Cli

  optionRegExp = /^--(.+)$/

  @parseArgs: ([node, sourceFile, args...] = process.argv)->
    each arg, i in args into options = commands: currentOption = []
      if option = arg.match /^--(.+)$/
        currentOption = options[lowerCamelCase option[1]] = []
      else
        currentOption.push arg

  @main: ->
    options = @parseArgs()
    unless options.commands.length == 1 &&
        command = commands[commandName = options.commands[0]]
        && command is Function
        && !isClass command
      log
        """
          s3p help:

          Commands: #{}
            Object.keys commands
            .join ', '
    else
      options = object o, k in options when k != :commands
        switch o.length
        when 0 then true
        when 1 then o[0]
        else o

      log {}
        command: commandName
        options
      Promise.then -> command options
      .then log, log
