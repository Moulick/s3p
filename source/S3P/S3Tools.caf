import &ArtStandardLib, &ArtClassSystem, &Lib

class S3Tools

  @each: (options, f) =>
    @_eachRecursive options, f, '', 'z'.repeat(1024)

  @_eachRecursive: (options, f, startAfter, stopAt) =>
    options extract bucket, limit = 1000, prefix

    S3.list {} bucket, startAfter, limit, prefix
    .then (items) ->
      each item in items do f item
      unless items.length < limit || peek(items).Key >= stopAt
        middle = getBisectKey startAfter, stopAt
        Promise.all []
          @_eachRecursive options, f, startAfter, middle
          @_eachRecursive options, f, middle, stopAt

start = currentSecond()
S3.list baseRequest =
  bucket: :resbio-lims-filesystem-replicate
  limit: 1000
.tap -> log time: currentSecond() - start

# .then (results) ->
#   list log merge baseRequest, startAfter:
#     peek results
#     .Key
# # .tap log
# .tap -> log time: currentSecond() - start